/*
子父类出现后，类成员的特点

类中成员：
1.变量
2.函数
3.构造函数

1.变量
如果子类中出现非私有的同名成员变量时。
子类要访问本类中的变量，用this
子类要访问父类中的用super

2.子父类中的函数
当子类出现和父类一模一样的函数时
当子类对象调用该函数，会运行子类函数的内容
如同父类的函数被覆盖一样

这种情况是函数的另一个特性:重写（覆盖）

当子类继承父类，沿袭了父类的功能到子类中
但是子类虽具备该功能，但是功能的内容却和父类不一致
这时，没有必要定义新功能，而是使用覆盖特性，保留父类的功能定义，并重写功能

覆盖：
1.子类覆盖父类，必须保证子类权限大于等于父类权限，才可以覆盖，否则编译失败

2.静态只能覆盖静态。


重载：只看同名函数的参数列表
重写：子父类方法要一模一样
*/
class Fu
{
	private int num = 4;
	public void setNum(int num)
	{
		this.num = num;
	}
	public int getNum()
	{
		return this.num;
	}
	void show1()
	{
		System.out.println("zi show");
	}
	void speak()
	{
		System.out.println("vb");
	}
}
class Zi extends Fu
{
	//int num = 5;
	void show2()
	{
		System.out.println("zi show");
	}
	void speak()
	{
		System.out.println("java");
	}
}

class  ExtendsDemo2
{
	public static void main(String[] args) 
	{
		Zi z = new Zi();
		z.show1();
		z.show2();
		//System.out.println(z.num1+"..."+z.num2);
	}
}

class Tel
{
	void show()
	{
		System.out.println("number");
	}
}

class NewTel extends Tel
{
	void show()
	{
		//System.out.println("number");
		super.show();
		System.out.println("name");
		System.out.println("photo");
	}
}