/*
3.子父类中的构造函数

在对子类对象进行初始化时，父类的构造函数也会运行
那是因为子类构造函数默认第一行有一天隐藏的语句 super()；
super()：会访问父类中空参数的构造函数，而且子类中所有构造函数默认第一行都是super()

为什么子类一定要访问父类中的构造函数.

因为父类中的数据子类可以直接获取，所以子类对象在建立时，需要先查看父类是如何对这些数据进行初始化的
所以子类在对象初始化时，要先访问一下父类中的构造函数。
如果要访问父类中指定的构造函数，可以通过手动定义super语句的方式来指定。

注意：super语句一定定义在子类构造函数的第一行
*/
class Fu
{
	Fu()
	{

		System.out.println("fu run");
	}
	Fu(int x)
	{
		System.out.println("fu..."+x);
	}
	
}
class Zi extends Fu
{
	Zi()
	{
		//super();   这个是隐藏的一句话  这个是默认方式
		//super(4);  //这个是手动方式
		System.out.println("zi run");
	}
	Zi(int x)
	{
		//super(3);
		System.out.println("zi..."+x);
	}
}
class  ExtendsDemo3
{
	public static void main(String[] args) 
	{
		Zi z = new Zi();
		System.out.println(zi.num);
	}
}

/*
class Person
{
	private String name;
	Person(String name)
	{
		this.name = name;
	}
	void show(){}
}
class Student extends Person
{
	Student(String name)
	{
		super(name);
	}
	void method()
	{
		super.show();
	}
}
*/